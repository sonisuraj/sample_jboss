version: 0.2

env:
   type: LINUX_CONTAINER
   image: aws/codebuild/docker:17.09.0
phases:
  pre_build:
    commands:
      - pip install awscli --upgrade --user
      - echo `aws --version`
      - echo Entered the install phase...
      - apt-get update -y
      - apt-get install -y maven
      - apt-get install -y default-jdk
      - echo Logging in to Amazon ECR...
      - echo ${repository_url}
      - $(aws ecr get-login --region ${region} --no-include-email)
      - REPOSITORY_URI=${repository_url}
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo Entered the pre_build phase...
  build:
    commands:
      - echo Java Home is ...............
      - echo $JAVA_HOME
      - echo Path is ............
      - echo $PATH
      - echo Contents of dir..........
      - echo `ls /usr/lib/jvm`
      - echo Build started on `date`
      - echo performing maven build
      - cd webapp
      - /var/jenkins_home/tools/hudson.tasks.Ant_AntInstallation/1.8/bin/ant -file build.xml
      - cd ..
      - echo Building the Docker image...
      - docker build --no-cache -t $REPOSITORY_URI:creditprocessor_latest .
      - echo $REPOSITORY_URI
      - docker tag $REPOSITORY_URI:creditprocessor_latest $REPOSITORY_URI:creditprocessor_$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:creditprocessor_latest
      - docker push $REPOSITORY_URI:creditprocessor_$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"app","imageUri":"%s"}]' $REPOSITORY_URI:creditprocessor_latest > imagedefinitions.json
      - echo upgrading db-migrate task definitions
      - aws ecs run-task --launch-type FARGATE --cluster ${cluster_name} --task-definition app --network-configuration 'awsvpcConfiguration={subnets=[<Add subnets here>],securityGroups=[<Add Security groups here>]}'
artifacts:
  files: imagedefinitions.json